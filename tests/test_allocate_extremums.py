import numpy as np

from damageability._allocate_extremums import _allocate_extremums


values = np.array([ 
    0.079,  0.077,  0.073,  0.069,  0.066,  0.063,  0.059,  0.054,
    0.047,  0.042,  0.039,  0.039,  0.036,  0.033,  0.029,  0.027,
    0.019,  0.014,  0.01 ,  0.006,  0.005,  0.003,  0.003,  0.003,
    0.005,  0.006,  0.014,  0.026,  0.039,  0.054,  0.067,  0.078,
    0.089,  0.101,  0.112,  0.121,  0.128,  0.133,  0.136,  0.138,
    0.138,  0.137,  0.135,  0.133,  0.131,  0.129,  0.127,  0.125,
    0.123,  0.122,  0.12 ,  0.118,  0.117,  0.115,  0.111,  0.105,
    0.098,  0.092,  0.087,  0.085,  0.082,  0.079,  0.075,  0.07 ,
    0.066,  0.063,  0.058,  0.052,  0.046,  0.036,  0.03 ,  0.024,
    0.016,  0.01 ,  0.007,  0.005,  0.005,  0.005,  0.002,  0.002,
    0.002,  0.005,  0.008,  0.007,  0.005,  0.001, -0.003, -0.008,
    -0.012, -0.019, -0.026, -0.032, -0.039, -0.045, -0.05 , -0.053,
    -0.054, -0.053, -0.051, -0.05 , -0.046, -0.042, -0.039, -0.037,
    -0.038, -0.037, -0.036, -0.037, -0.039, -0.045, -0.05 , -0.053,
    -0.057, -0.06 , -0.065, -0.071, -0.082, -0.091, -0.094, -0.098,
    -0.099, -0.098, -0.096, -0.092, -0.085, -0.08 , -0.073, -0.065,
    -0.055, -0.047, -0.045, -0.035, -0.025, -0.018, -0.012, -0.006,
    -0.002,  0.003,  0.008,  0.013,  0.016,  0.018,  0.021,  0.023,
    0.026,  0.029,  0.034,  0.04 ,  0.044,  0.054,  0.061,  0.067,
    0.072,  0.079,  0.085,  0.091,  0.097,  0.1  ,  0.106,  0.112,
    0.115,  0.118,  0.122,  0.126,  0.131,  0.135,  0.138,  0.141,
    0.145,  0.149,  0.153,  0.158,  0.163,  0.168,  0.172,  0.182,
    0.186,  0.189,  0.192,  0.196,  0.201,  0.202,  0.204,  0.203,
    0.205,  0.207,  0.207,  0.206,  0.206,  0.201,  0.194,  0.189,
    0.186,  0.184,  0.182,  0.179,  0.176,  0.17 ,  0.166,  0.164,
    0.161,  0.156,  0.148,  0.144,  0.141,  0.136,  0.13 ,  0.123,
    0.116,  0.111,  0.109,  0.101,  0.094,  0.088,  0.08 ,  0.072,
    0.066,  0.057,  0.051,  0.044,  0.038,  0.031,  0.023,  0.014,
    0.008,  0.002, -0.003, -0.007, -0.01 , -0.012, -0.011, -0.01 ,
    -0.011, -0.014, -0.012, -0.01 , -0.007, -0.004, -0.003, -0.003,
    -0.002,  0.001,  0.006,  0.008,  0.007,  0.009,  0.01 ,  0.011,
    0.014,  0.013,  0.011,  0.011,  0.013,  0.015,  0.016,  0.013,
    0.011,  0.01 ,  0.01 ,  0.01 ,  0.006,  0.005,  0.004,  0.004,
    0.006,  0.01 ,  0.011,  0.012,  0.013,  0.014,  0.018,  0.021,
    0.023,  0.026,  0.024,  0.028,  0.035,  0.039,  0.044,  0.05 ,
    0.054,  0.057,  0.063,  0.064,  0.067,  0.067,  0.068,  0.07 ,
    0.069,  0.066,  0.064,  0.064,  0.063,  0.065,  0.065,  0.062,
    0.06 ,  0.059,  0.059,  0.06 ,  0.059,  0.056,  0.055,  0.054,
    0.052,  0.051,  0.049,  0.048,  0.047,  0.047,  0.047,  0.046,
    0.045,  0.047,  0.051,  0.056,  0.057,  0.063,  0.067,  0.073,
    0.084,  0.094,  0.104,  0.115,  0.126,  0.136,  0.148,  0.16 ,
    0.171,  0.182,  0.191,  0.194,  0.196,  0.194,  0.192,  0.191,
    0.189,  0.187,  0.19 ,  0.194,  0.192,  0.194,  0.196,  0.196,
    0.195,  0.199,  0.199,  0.196,  0.195,  0.197,  0.197,  0.196,
    0.194,  0.193,  0.192,  0.189,  0.186,  0.181,  0.176,  0.173,
    0.17 ,  0.164,  0.16 ,  0.155,  0.15 ,  0.145,  0.14 ,  0.133,
    0.128,  0.125,  0.122,  0.118,  0.115,  0.11 ,  0.104,  0.1  ,
    0.097,  0.095,  0.09 ,  0.085,  0.079,  0.075,  0.074,  0.07 ,
    0.066,  0.062,  0.058,  0.054,  0.052,  0.049,  0.046,  0.043,
    0.042,  0.041,  0.038,  0.036,  0.034,  0.034,  0.036,  0.039,
    0.041,  0.044,  0.049,  0.054,  0.061,  0.066,  0.072,  0.076,
    0.082,  0.086,  0.09 ,  0.097,  0.1  ,  0.1  ,  0.103,  0.107,
    0.108,  0.11 ,  0.109,  0.11 ,  0.113,  0.113,  0.113,  0.114,
    0.116,  0.117,  0.118,  0.122,  0.125,  0.127,  0.128,  0.132,
    0.135,  0.136,  0.136,  0.138,  0.138,  0.14 ,  0.14 ,  0.139,
    0.138,  0.137,  0.136,  0.133,  0.13 ,  0.127,  0.124,  0.122,
    0.123,  0.125,  0.127,  0.127,  0.126,  0.125,  0.127,  0.13 ,
    0.131,  0.131,  0.127,  0.123,  0.12 ,  0.12 ,  0.121,  0.122,
    0.123,  0.127,  0.133,  0.14 ,  0.151,  0.161,  0.171,  0.182,
    0.193,  0.201,  0.204,  0.213,  0.224,  0.232,  0.237,  0.24 ,
    0.239,  0.232,  0.23 ,  0.224,  0.214,  0.203,  0.192,  0.179,
    0.167,  0.156,  0.145,  0.133,  0.124,  0.118,  0.105,  0.098,
    0.092,  0.09 ,  0.087,  0.084,
])

# 0.00
extremum_values_000 = np.array([
    0.079,  0.003,  0.138,  0.002,  0.008, -0.054, -0.037, -0.038,
   -0.036, -0.099,  0.204,  0.203,  0.207, -0.012, -0.01 , -0.014,
    0.008,  0.007,  0.014,  0.011,  0.016,  0.004,  0.026,  0.024,
    0.07 ,  0.063,  0.065,  0.059,  0.06 ,  0.045,  0.196,  0.187,
    0.194,  0.192,  0.196,  0.195,  0.199,  0.195,  0.197,  0.034,
    0.11 ,  0.109,  0.14 ,  0.122,  0.127,  0.125,  0.131,  0.12 ,
    0.24 ,  0.084,
])

# 0.01
extremum_values_001 = np.array([
    0.079,  0.003,  0.138, -0.054, -0.036, -0.099,  0.207, -0.014,
    0.016,  0.004,  0.07 ,  0.045,  0.199,  0.034,  0.14 ,  0.12 ,
    0.24 ,  0.084,
])

# 0.1
extremum_values_010 = np.array([
    0.079, -0.099,  0.207, -0.014,  0.199,  0.034,  0.24 ,  0.084,
])



def test_allocate_extremums_000():
    extremum_values_000_ = _allocate_extremums(
        values=values,
        smoothing_value=0.00,
        result_type='values',
    )
    assert np.all(np.equal(extremum_values_000_, extremum_values_000))


def test_allocate_extremums_001():
    extremum_values_001_ = _allocate_extremums(
        values=values,
        smoothing_value=0.01,
        result_type='values',
    )
    assert np.all(np.equal(extremum_values_001_, extremum_values_001))


def test_allocate_extremums_010():
    extremum_values_010_ = _allocate_extremums(
        values=values,
        smoothing_value=0.10,
        result_type='values',
    )
    assert np.all(np.equal(extremum_values_010_, extremum_values_010))


